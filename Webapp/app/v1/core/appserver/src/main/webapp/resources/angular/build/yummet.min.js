var app=angular.module("yummet",["ngRoute","ngResource","signupApp","loginApp","filterApp","postApp","profileApp"]),options={};options.api={},options.api.base_url="http://localhost:8080",app.config(function(a,b){a.when("/login",{templateUrl:"/rs/angular/app/components/identification/login/login.html",controller:"loginAppContoller"}).when("/signup",{templateUrl:"/rs/angular/app/components/identification/signup/signup.html",controller:"signupAppController"}).when("/logout",{templateUrl:"/rs/angular/app/components/identification/logout/logout.html",controller:"logoutAppContoller"}).otherwise({redirectTo:"/"}),b.defaults.headers.common["X-Requested-With"]="XMLHttpRequest"}),app.run(function(a,b,c,d){a.$on("$routeChangeSuccess",function(a,e){b.hash(d.scrollTo),c()})}),app.controller("configController",["$scope","$http","$anchorScroll","$location",function(a,b,c,d){a.init=function(){}}]);var app=angular.module("loginApp",["ngAnimate","localStore","contextStateService","authenticateService"]);app.config(function(){}),app.run(function(){}),app.controller("loginAppContoller",["$scope","$location","$http","$window","TokenStorage","stateService","authenticationService",function(a,b,c,d,e,f,g){a.login=function(){if(f.isLogin&&f.isLogin===!0)return void Console.log("you already in Yummmet, Please log out first");console.log("entered login function with username "+a.credentials.email+" password"+a.credentials.password);var c=a.credentials.email,e=a.credentials.password;void 0!==a.credentials.email&&void 0!==a.credentials.password&&(console.log("gonna entering loginAuthenticate function"),h(a.credentials,function(){f.isLogin?(d.location.href="/vw/posthome.html",g.setCredentials(c,e)):(b.path("/login"),authenticationServie.clearCredentials())}))},a.passwordStrength=function(){var b=a.credentials.password;b>8?a.strength="strong":b>4?a.strength="medium":a.strength="weak"};var h=function(a,b){var d=a?{authorization:"Basic "+btoa(a.email+":"+a.password)}:{};c.get(options.api.base_url+"/service/user",{headers:d}).success(function(a){a.email?(console.log("user login successfully"),alert("Hello "+a.email),f.isLogin=!0):(console.log("user login failed"),f.isLogin=!1),b&&b()}).error(function(a,c){console.log("user login failed"),console.log(a),console.log(c),b&&b(),f.isLogin=!1})}}]);var app=angular.module("logoutApp",["ngAnimate","localStore","contextStateService","authenticateService"]);app.config(function(){}),app.run(function(){}),app.controller("logoutAppContoller",["$scope","$location","$http","$window","TokenStorage","stateService","authenticationService",function(a,b,c,d,e,f,g){a.init=function(){console.log("entered logout function"),f.isLogin=!1,g.clearCredentials(),d.location.href="/"},a.init()}]);var app=angular.module("signupApp",["ngAnimate","localStore","userContextService","authenticateService"]);app.config(function(){}),app.run(function(){}),app.controller("signupAppController",["$scope","$location","TokenStorage","userService","stateService","authenticationService",function(a,b,c,d,e,f){a.submitted=!1,a.showMessage=!1,console.log("entering singupAppControler"),a.signupFormSubmit=function(){if(e.isLogin&&e.isLogin===!0)return void Console.log("you already in Yummmet, Please log out first");var d=a.user.firstname,h=a.user.lastname,i=a.user.email,j=a.user.password,k=a.user.repeatpassword;void 0!==d&&void 0!==h&&void 0!==i&&void 0!==j&&void 0!==k&&(console.log("gonna register user with "+d+" "+h+" "+i+" "+j+" "+k),g(a.user,function(){e.isLogin&&e.isLogin===!0?(b.path("/amherpost"),f.setCredentials(i,j),console.log("register success")):(b.path("/signup"),f.clearCredentials(),c.clear())}))};var g=function(b,c){d.create(a.user).then(function(a){a.data.email?(console.log("user register successfully"),e.isLogin=!0):(console.log("user register failed"),console.log(status),console.log(data),e.isLogin=!1),c&&c()})}}]);var app=angular.module("postApp",["ngAnimate","localStore","logoutApp","userContextService","authenticateService","postContextService"]);app.config(function(a,b){}),app.run(function(){}),app.controller("postAppController",["$scope","$location","TokenStorage","userService","stateService","authenticationService","postService",function(a,b,c,d,e,f,g){a.posts=[],a.init=function(){a.isprovide=!0,a.isask=!1;var b=f.getCredentials();b&&j(b,function(){})},a.addPost=function(){var b=f.getCredentials(),c=null;b&&(c=a.postbody,i(b,c,function(){}))},a.removePost=function(){var a=null;e.isLogin&&e.isLoging===!0&&h(a,post,function(){})};var h=function(a,b,c){a&&g.remove(a,b).then(function(a){a.data.id,c&&c()})},i=function(b,c,d){b?g.create(b,c).then(function(b){b.data?a.posts.push(b.data):a.posts.pop(),d&&d()}):console.log("user credential has error")},j=function(b,c){userCredential?g.get(8).then(function(b){b.data?a.posts.push(b.data):a.posts.pop(),c&&c()}):console.log("user credential has error")};a.setProvide=function(){a.isask=!1,a.isprovide=!0},a.setAsk=function(){a.isprovide=!1,a.isask=!0}}]);var app=angular.module("profileApp",["ngAnimate","localStore","contextStateService","profileContextService","authenticateService"]);app.config(function(a,b){}),app.run(function(){}),app.controller("profileController",["$scope","$location","$http","$window","TokenStorage","stateService","authenticationService","profileService",function(a,b,c,d,e,f,g,h){a.init=function(){i(function(){console.log("enter user profile callback")})};var i=function(b){h.getProfile().then(function(c){c.data.email?(console.log("user profile successfully"),a.user=c.data):(console.log("retrieve user profile failed"),console.log(status),console.log(data)),b&&b()})};a.init()}]);var app=angular.module("filterApp",[]);app.factory("tokenInterceptor",["TokenStorage",function(a,c,d,e){var f=function(a){return a?(a^16*Math.random()>>a/4).toString(16):([1e16]+1e16).replace(/[01]/g,b)};return{request:function(a){a.headers=a.headers||{};var b=e.retrieve();return b&&(a.headers["X-AUTH-TOKEN"]=b),a},responseError:function(b){return(401===b.status||403===b.status)&&e.clear(),a.reject(b)},response:function(b){return null!=b&&200==b.status&&e.retrieve()&&!d.isLogin&&(d.isLogin=!0),document.cookie="CSRF-TOKEN="+f("yummet"),b||a.when(b)},responseError:function(b){return null!=b&&401===b.status&&(e.retrieve()||d.isLogin)&&(e().clear(),d.isAuthenticated=!1,c.path("/logout")),a.reject(b)}}}]),function(){"use strict";function a(a,c,d,e,f){function g(e,f){var g=b.encode(e+":"+f);d.globals={currentUser:{username:e,authdata:g}},a.defaults.headers.common.Authorization="Basic "+g,c.put("yummet",d.globals)}function h(){d.globals={},c.remove("yummet"),a.defaults.headers.common.Authorization="Basic "}function i(){return c.get("yummet")}var j={};return j.setCredentials=g,j.clearCredentials=h,j.getCredentials=i,j}angular.module("authenticateService",["ngCookies"]).factory("authenticationService",a),a.$inject=["$http","$cookieStore","$rootScope","$timeout","userService"];var b={encode:function(a){var b=btoa(a);return b},decode:function(a){var b=atob(a);return b}}}();var app=angular.module("contextStateService",[]);app.factory("stateService",function(){var a={isLogin:!1};return a});var app=angular.module("localStore",[]);app.factory("TokenStorage",function(){var a="yummet_auth_token";return{store:function(b){return localStorage.setItem(a,b)},retrieve:function(){return localStorage.getItem(a)},clear:function(){return localStorage.removeItem(a)}}}),function(){"use strict";function a(a){function b(b){return a.get(options.api.base_url+"/service/post/"+b).then(e,f("Error getting post by id"))}function c(b,c){return a.post(options.api.base_url+"/service/post/create/",c).then(e,f("Error creating post"))}function d(b){return a.put(options.api.base_url+"/service/post/update/"+b.id,b).then(e,f("Error updating post"))}function e(a){return a}function f(a){return function(){return{success:!1,message:a}}}var g={};return g.getById=b,g.create=c,g.update=d,g}angular.module("postContextService",[]).factory("postService",a),a.$inject=["$http"]}(),function(){"use strict";function a(a){function b(){return a.get(options.api.base_url+"/service/profile/").then(d,e("Error getting user profile"))}function c(b){return a.put(options.api.base_url+"/service/profile/update/"+b).then(d,e("Error updating user profile"))}function d(a){return a}function e(a){return function(){return{success:!1,message:a}}}var f={};return f.getProfile=b,f.updateProfile=c,f}var b=angular.module("profileContextService",[]);b.factory("profileService",a)}(),function(){"use strict";function a(a){function b(){return a.get(options.api.base_url+"/service/users").then(g,h("Error getting all users"))}function c(b){return a.get(options.api.base_url+"/service/user/"+b).then(g,h("Error getting user by id"))}function d(b){return a.get(options.api.base_url+"/service/user/"+b).then(g,h("Error getting user by username"))}function e(b){return a.post(options.api.base_url+"/service/user/create/",b).then(g,h("Error creating user"))}function f(b){return a.put(options.api.base_url+"/service/user/update/"+b.id,b).then(g,h("Error updating user"))}function g(a){return a}function h(a){return function(){return{success:!1,message:a}}}var i={};return i.getAll=b,i.getById=c,i.getByUsername=d,i.create=e,i.update=f,i}angular.module("userContextService",[]).factory("userService",a),a.$inject=["$http"]}();