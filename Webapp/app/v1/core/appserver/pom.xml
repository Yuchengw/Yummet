<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.amher</groupId>
	<artifactId>appserver</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>
	<name>${project.artifactId}</name>
	<description>Appserver POM for Yummet, Author:Yucheng</description>

	<!-- Pom properties -->
	<properties>
		<jetty.version>9.2.7.v20150116</jetty.version>
		<junit.version>4.10</junit.version>
		<org.springframework.version>4.0.0.RELEASE</org.springframework.version>
		<commons-lang.version>20030203.000129</commons-lang.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.plugin.version>3.2</maven.compiler.plugin.version>
		<maven.war.plugin.version>3.2</maven.war.plugin.version>
		<jackson.databind-version>2.2.3</jackson.databind-version>
		<org.aspectj-version>1.7.4</org.aspectj-version>
		<jcloverslf4j.version>1.7.12</jcloverslf4j.version>
		<logback.version>1.1.3</logback.version>
		<jedis.version>2.6.2</jedis.version>
		<spring.data.commons.version>1.10.0.RELEASE</spring.data.commons.version>
		<spring.data.redis.version>1.2.1.RELEASE</spring.data.redis.version>
		<spring.data.mongodb.version>1.7.0.RELEASE</spring.data.mongodb.version>
		<spring.mongo.java.driver.version>3.0.0</spring.mongo.java.driver.version>
		<jersey.spring.version>1.4.0</jersey.spring.version>
	</properties>

	<!-- choose EBR repository since we care about OSGI -->
	<repositories>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>EBR Spring Release Repository</name>
			<url>http:// repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>EBR External Release Repository</name>
			<url>http:// repository.springsource.com/maven/bundles/external</url>
		</repository>
		<!-- Used for spring-data-redis -->
		<!-- used for nightly builds -->
		<repository>
			<id>spring-maven-snapshot</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<name>Springframework Maven SNAPSHOT Repository</name>
			<url>http://repo.spring.io/libs-release</url>
		</repository>
		<!-- used for milestone/rc releases -->
		<repository>
			<id>spring-maven-milestone</id>
			<name>Springframework Maven Milestone Repository</name>
			<url>http://repo.spring.io/libs-milestone</url>
		</repository>
	</repositories>

	<!-- dependencies Start -->
	<dependencies>
	  <!-- added for lack of jersey on IDE  
		<dependency>
			  <groupId>com.sun.jersey.contribs</groupId>
   			  <artifactId>jersey-spring</artifactId>
    		  <version>${jersey.spring.version></version>
		</dependency>
	  -->
	 	 <dependency>
        	<groupId>org.mortbay.jetty</groupId>
        	<artifactId>jsp-2.1</artifactId>
        	<version>6.0.0</version>
     	</dependency>
		<!-- -->
		<dependency>
			<groupId>com.amher</groupId>
			<artifactId>platform</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<!-- Unit Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Jackson convert jpo to json format -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.5</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.databind-version}</version>
		</dependency>
		<!-- Jetty Related Dependencies -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<!-- Spring Related Dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- add for Ja2x -->
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
			<version>2.1.4.RELEASE</version>
		</dependency>
		<!-- AOP programming -->
		<!-- AspectJ -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<!-- ************Logging System Start************** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcloverslf4j.version}</version>
		</dependency>
		<!-- LogBack dependencies -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- ***********Monitoring Tool: javaMelody *********** -->
		<!-- javamelody-core -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.55.0</version>
		</dependency>
		<!-- itext, option to add PDF export -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
			<exclusions>
				<exclusion>
					<artifactId>bcmail-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bcprov-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bctsp-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- xstream as an option for the xml and json export or for the remoting 
			with the collector server -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.jrobin</groupId>
			<artifactId>jrobin</artifactId>
			<version>1.5.9</version>
		</dependency>
		<!-- ****************************Spring Data commons******************** -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>${spring.data.commons.version}</version>
		</dependency>
		<!-- ****************************Caching Service******************* -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring.data.redis.version}</version>
		</dependency>
		<!-- jedis Redis Connector -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- ***************************Spring Security******************** -->
		<dependency>
        	<groupId>org.springframework.security</groupId>
        	<artifactId>spring-security-web</artifactId>
        	<version>${org.springframework.version}</version>
    	</dependency>
    	<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-config</artifactId>
    		<version>${org.springframework.version}</version>
  		</dependency>
  		<!-- ***************************Spring Data Mongo Support**************** -->
  		<dependency>
  			<groupId>org.springframework.data</groupId>
  			<artifactId>spring-data-mongodb</artifactId>
  			<version>${spring.data.mongodb.version}</version>
  		</dependency>
  		<!-- Dependency for MongoDB Java connector -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${spring.mongo.java.driver.version}</version>
		</dependency>
		<!-- guava is a good stuff, we need it! -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
	</dependencies>

	<!-- main build start -->
	<build>
		<plugins>
			<!-- in order to configure target JVM -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<target>1.8</target>
					<source>1.8</source>
				</configuration>
			</plugin>
			<!-- in order to create web application archive, since we deploy appserver 
				in elcipse, do not want to lose tomcat either -->
			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> 
				<version>2.2</version> <configuration> <archive> <manifest> <addClasspath>true</addClasspath> 
				<classpathPrefix>lib/</classpathPrefix> </manifest> </archive> </configuration> 
				</plugin> -->
			<!-- in order to let maven use jetty -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.14.v20131031</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopKey>stop</stopKey>
					<stopPort>9999</stopPort>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
				<version>1.1</version> <executions> <execution><goals><goal>java</goal></goals></execution> 
				</executions> <configuration> <mainClass>com.amher.appserver.core.entry.HelloAmherServlet</mainClass> 
				</configuration> </plugin> -->
		</plugins>
	</build>
</project>
